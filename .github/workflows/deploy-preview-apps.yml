name: Deploy previews

on:
  pull_request:
    types: [opened, synchronize]
  workflow_run:
    workflows: [Checks]
    types:
      - completed

jobs:
  get-branch-name:
    name: Get current branch name
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.set-branch-name.outputs.branch_name }}

    steps:
    - name: Extract branch name
      id: set-branch-name
      if: github.event_name == 'pull_request'
      run: | 
        branch_name=${GITHUB_HEAD_REF}
        echo $branch_name
        echo "::set-output name=branch_name::$branch_name"

  generate-artifact-key:
      name: Generate artifact key
      runs-on: ubuntu-latest
      outputs:
        artifact: ${{ steps.set-artifact-key.outputs.artifact }}

      steps:
      - name: Generate artifact key
        id: set-artifact-key
        # Replace possible / on the string to -
        run: | 
          github_head_ref="${{ github.head_ref }}"
          echo $github_head_ref
          artifact=$(echo "${github_head_ref}" | sed 's/\//\-/g')
          echo $artifact
          echo "::set-output name=artifact::$artifact"
  
  get-github-context:
    name: Get Github Context
    runs-on: ubuntu-latest
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
      - name: Print pull request sha
        run: echo ${{ github.event.pull_request.head.sha }}
      - name: Print github context
        run: echo "$GITHUB_CONTEXT"

  get-changed-apps:
    name: Get changed apps
    needs: [get-branch-name, get-github-context, generate-artifact-key]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: 'Restore node_modules cache'   
      uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: 'Use NodeJS 14'
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: 'Setup npm'
      run: |
        npm set @prepo-io:registry=https://npm.pkg.github.com/prepo-io
        npm set "//npm.pkg.github.com/:_authToken=${{ secrets.PREPO_PACKAGES_TOKEN }}"

    - name: Install Dependencies
      run: |
        yarn install --frozen-lockfile

    - name: Turbo Cache
      id: turbo-cache
      uses: actions/cache@v2
      with:
        path: node_modules/.cache
        key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
        restore-keys: |
          turbo-${{ github.job }}-${{ github.ref_name }}-
    
    - name: Run changed apps script
      run: FILTER_BRANCH=${GITHUB_HEAD_REF} yarn run changed:ci

    - name: Upload changed apps artifact
      uses: actions/upload-artifact@v2
      with:
        name: changed-apps-${{ needs.generate-artifact-key.outputs.artifact }}
        path: changed_apps.json

    - name: Set matrix value
      id: set-matrix
      run: |
          matrix="{\"include\":$(cat changed_apps.json | jq -c -r .)}"
          echo $matrix
          echo $matrix | jq .
          echo "::set-output name=matrix::$matrix"

  check-matrix-and-cache:
    runs-on: ubuntu-latest
    needs: [get-changed-apps, generate-artifact-key]
    if: github.event_name == 'pull_request'
    steps:
      - name: Install json2yaml
        run: |
          sudo npm install -g json2yaml

      - name: Check matrix definition
        run: |
          matrix='${{ needs.get-changed-apps.outputs.matrix }}'
          echo $matrix
          echo $matrix | jq .
          echo $matrix | json2yaml
          if [[ $matrix != '' ]] ; then echo "Matrix is not empty string!" ; else echo "Matrix is empty string!" ; fi
          if [[ $matrix != '[]' ]] ; then echo "Matrix is not empty array!" ; else echo "Matrix is empty array!" ; fi
          if [[ (needs.get-changed-apps.outputs.matrix != '' && needs.get-changed-apps.outputs.matrix != '[]') ]] ; then echo "Should run pipeline" ; else echo "Should not run pipeline" ; fi
      
      - name: Download changed apps artifact
        uses: actions/download-artifact@v2
        with:
          name: changed-apps-${{ needs.generate-artifact-key.outputs.artifact }}

      - name: Print changed apps cache
        run: cat changed_apps.json | jq -c -r .

  deploy-apps:
    name: Deploy apps
    needs: get-changed-apps
    runs-on: ubuntu-latest
    if: |
      (needs.get-changed-apps.outputs.matrix != '' && needs.get-changed-apps.outputs.matrix != '[]')
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-changed-apps.outputs.matrix)}} 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Vercel Action
        id: vercel-deploy
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ matrix.projectId }}
          CREATE_COMMENT: false
      - uses: phulsechinmay/rewritable-pr-comment@v0.3.0
        if: ${{ steps.vercel-deploy.outputs.DEPLOYMENT_CREATED }}
        with:
          message: |
            App <strong>${{ matrix.name }}</strong> has been deployed to Vercel.

            <table>
              <tr>
                <td><strong>âœ… Preview:</strong></td>
                <td><a href='${{ steps.vercel-deploy.outputs.PREVIEW_URL }}'>${{ steps.vercel-deploy.outputs.PREVIEW_URL }}</a></td>
              </tr>
            </table>

          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          COMMENT_IDENTIFIER: ${{ matrix.projectId }}